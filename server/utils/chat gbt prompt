/*id like you to create some controllers for me,
i am using nodejs, javascript, mongodb, mongoose, and express
here are the models...


dayModel.js:
const timeblockSchema = require('./timeblockModel')
const { Schema, model } = require('mongoose')

const daySchema = new Schema({
    owner: {
            type: Schema.Types.ObjectId,
            ref: 'user'
    },
    date: {
        type: Date,
        required: true
    },
    day: {
        type: Number,
        required: true
    },
    journal: {
        type: String,
        required: true
    },
    timeblocks: [
        {
            type: Schema.Types.ObjectId,
            ref: 'timeblock'
        }
    ]
})

const Day = model('day', daySchema);

module.exports = Day;



userModel.js:
const { Schema, model } = require('mongoose')
const daySchema = require('./dayModel')

const userSchema = new Schema({
    username: {
        type: String,
        required: true
    },
    fname: {
        type: String,
        required: true
    },
    sname: {
        type: String,
        required: true
    },
    email: {
        type: String,
        required: true
    },
    password: {
        type: String,
        required: true
    },
    days: [
        {
            type: Schema.Types.ObjectId,
            ref: 'day'
        }
    ]
});

const User = model('user', userSchema);

module.exports = User;


timeblockModel.js:
const { Schema, model } = require('mongoose')

const timeBlockSchema = new Schema({
    belongsTo: {
        type: Schema.Types.ObjectId,
        ref: 'day'      
    },
    title: {
        type: String,
        required: true
    },
    description: {
        type: String,
        required: false
    },
    timeS: {
        type: String,
        required: true
    },
    timeE: {
        type: String,
        required: true
    },
    notes: {
        type: String,
        required: false
    }
}, {timestames:  true})

const Timeblock = model('timeblock', timeBlockSchema);

module.exports = Timeblock;

here are the controllers id like:

- get all days

- get a day with the same date as in the req body and show the journal and all the timeblocks along with their respective notes when getting a day

- create a journal and push it into a journal of the day specified in the url and only the user specified in the url.
if that day doesnt exist create a new one.

- edit a journal and push it into a journal of the day specified in the url and only the user specified in the url.

- create a timeblock and push it into a timeblocks array of the day specified in the url and only the user specified in the url.
if that day doesnt exist create a new one.

- add notes to the notes in a timeblock specified in the url using title

- edit a timeblock specified in the url using title

- delete a timeblock
*/



